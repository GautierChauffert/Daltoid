using UnityEngine;
using System.Collections.Generic;

public interface IBackupableEntity
{
	void OnSave(SaveData data);
	void OnLoad(SaveData data);
}

[System.Serializable]
public class SaveData
{
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* ---------------------------------------- SUBCLASS -----------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	[System.Serializable]
	public class WeaponData
	{
		public WeaponData(Weapon w) {
			this.reference = w;
		}

		internal Weapon reference;
		public Vector3 position;
		public Quaternion rotation;
	}




	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* ------------------------------------------ DATA -------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	[SerializeField] private List<WeaponData> weapons = new List<WeaponData>();





	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------- UTIL METHODS ---------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	/* -------------------------------------------------------------------------------------------*/
	public WeaponData GetWeaponData(Weapon w)
	{
		WeaponData wd = this.weapons.Find(x => x.reference == w);

		if(wd == null) {
			wd = new WeaponData(w);
			this.weapons.Add(wd);
		}

		return wd;
	}
}
